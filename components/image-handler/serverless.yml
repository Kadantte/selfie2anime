service: selfie2anime-image-handler

plugins:
  - serverless-python-requirements
  - serverless-domain-manager
  - serverless-pseudo-parameters

custom:
  pythonRequirements:
    dockerizePip: non-linux
    noDeploy: []
  customDomain:
    domainName: api.selfie2anime.com
    basePath: analysis
    stage: ${self:provider.stage}
    createRoute53Record: true
  environment:
    BUCKET_NAME: selfie2anime
    QUEUE_NAME: selfie2anime
    DLQ_NAME: selfie2anime-dlq
    DYNAMO_NAME: selfie2anime

package:
  exclude:
    - .venv/**
    - node_modules/**

provider:
  name: aws
  runtime: python3.7
  stage: dev
  tracing:
    apiGateway: true
    lambda: true
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
       - s3:PutObject
       - s3:PutObjectAcl
       - s3:GetObject"
       - s3:DeleteObject
      Resource:
        - "arn:aws:s3:::${self:custom.environment.BUCKET_NAME}/*"
    - Effect: Allow
      Action:
       - sqs:SendMessage
       - sqs:GetQueueUrl
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:PutItem
      Resource:
        - "Fn::GetAtt": [ DynamoDbselfie2anime, Arn ]
  environment:
    BUCKET_NAME: ${self:custom.environment.BUCKET_NAME}
    QUEUE_NAME: ${self:custom.environment.QUEUE_NAME}
    DYNAMO_TABLE: ${self:custom.environment.DYNAMO_NAME}

functions:
  selfie:
    handler: handler.selfie
    events:
      - http:
          path: selfie
          method: post
          cors: true
  count:
    handler: handler.count
    events:
      - http:
          path: count
          method: get
          cors: true

resources:
  Resources:
    S3Bucketselfie2anime:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.environment.BUCKET_NAME}
    Queueselfie2anime:
      Type: AWS::SQS::Queue
      Properties: 
        QueueName: ${self:custom.environment.QUEUE_NAME}
    Queueselfie2animedlq:
      Type: AWS::SQS::Queue
      Properties: 
        QueueName: ${self:custom.environment.DLQ_NAME}
    DynamoDbselfie2anime:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.environment.DYNAMO_NAME}
        AttributeDefinitions:
          - AttributeName: timestamp
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: timestamp
            KeyType: HASH
          - AttributeName: email
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST